name: Docker

on:
  push:
    paths-ignore:
      - LICENSE
      - '**.md'

  release:
    types:
      - published

env:
  DOCKER_BASE_NAME: slashnephy/epgbird

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup QEMU user-mode emulation
        uses: docker/setup-qemu-action@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Prepare image tag (master, on schedule)
        if: github.ref == 'refs/heads/master' || github.event_name == 'schedule'
        run: echo "DOCKER_TAG=latest" >> $GITHUB_ENV
      - name: Prepare image tag (other branches)
        if: github.ref != 'refs/heads/master'
        run: echo "DOCKER_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Prepare image tag (Release)
        if: github.event_name == 'release'
        run: echo "DOCKER_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Build & Push
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          push: true
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ env.DOCKER_BASE_NAME }}:${{ env.DOCKER_TAG }}
          cache-from: ${{ env.DOCKER_BASE_NAME }}:${{ env.DOCKER_TAG }}
          build-args: BUILDKIT_INLINE_CACHE=1

      - name: Build & Push (nvenc)
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          push: true
          file: nvenc.Dockerfile
          tags: ghcr.io/${{ env.DOCKER_BASE_NAME }}:${{ env.DOCKER_TAG }}-nvenc
          cache-from: ghcr.io/${{ env.DOCKER_BASE_NAME }}:${{ env.DOCKER_TAG }}-nvenc
          build-args: |
            IMAGE_TAG=${{ env.DOCKER_TAG }}
            BUILDKIT_INLINE_CACHE=1
